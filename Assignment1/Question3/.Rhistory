letters <- c("a", "b", "c", "d", "e", "f", "g")
x <- 5:8
y <- letters[3:6]
A <- data.frame(v1 = x, v2 = y)
View(A)
A <- data.frame(x, y)
View(A)
A <- data.frame( y, x)
View(A)
A[3,]
A
A[3,]
A[1,]
A[,2]
## Visualisation of Numerical Data
##Dot plot
stripchart(precip, xlab = "rainfall")
stripchart(rivers, method = "jitter", xlab = "length")
stripchart(discoveries, method = "stack", xlab = "number")
## Visualisation of Numerical Data
##Dot plot
precip
stripchart(precip, xlab = "rainfall")
## Histogram
hist(precip)
hist(precip, main = "")
hist(precip, freq = FALSE, main = "")
hist(precip, breaks = 10, main = "My title")
hist(precip, breaks = 200, main = "")
?hist
## Uniform Distribution ###
?runif
# generating a random number
runif(1)
#generating 3 random numbers
runif(3)
# generating 3 random numbers on a defined range
runif(3, min=5, max=10)
runif(5, min=0.25, max=0.5)
#generating an uniform random vector of 100 observations for the interval [0,1]
vec_u<-runif(100,0,1)
hist(vec_u)
#generating an uniform random vector of 100 observations for the interval [0,1]
vec_u<-runif(10000,0,1)
hist(vec_u)
# Download the laptop prices data set from the web site of kaggle
# (Laptop Price Prediction Cleaned Dataset) and read the data set in R.
# The data set consists of following variables: Company, Type Name, Ram, Weight, Price, # nolint: line_length_linter.
#    Touch Screen indicator, IPS indicator, Ppi, Cpu_brand, HDD, SSD, Gpu_brand, Os (Operation System). # nolint
# a) Import data set to R assigning the type of each variable correctly. (5p)
# b) Create a dataset including only types of laptops: Ultrabook, Notebook and 2 in 1 Convertible. (5p)
# c) Summarize the variables Weight, Price and the categorical variables in the new created data set. (10p)
# d) Cross classify the variables type of computer and the touch screen indicator in a table. Compute and interpret the conditional probability tables. (15p)
# e) Is there an association between the type of computer and the touch screen characteristic of a computer. Analyze it by using proper statistical method. (10p)
# f) Check the distribution of Price first for all observations then for subgroups of type of laptop in the data set created in section (b).
#     Does it follow a normal distribution? (15p)
# g) Create a data frame just by including Ultrabooks and Notebooks. (5p)
# h) Make a boxplot to show the distribution of Price across two categories of Type: Ultrabook vs. Notebook. Interpret it. (10p)
# i) Compare the average price of Ultrabooks and Notebooks by using the appropriate method. Do not forget to test the assumptions. (25p)
echo = TRUE
# a) Import data set to R assigning the type of each variable correctly. (5p)
laptop_prices <- read.csv("C:\\chomsky\\Academics\\Spring-2024\\SMDE\\Project\\Project1\\laptop_data_cleaned.csv", header = TRUE, sep = ",")
# b) Create a dataset including only types of laptops: Ultrabook, Notebook and 2 in 1 Convertible. (5p)
laptop_prices_filtered <- laptop_prices[laptop_prices$TypeName %in% c("Ultrabook", "Notebook", "2 in 1 Convertible"), ]
print(head(laptop_prices_filtered))
#print(head(laptop_prices_filtered))
# c) Summarize the variables Weight, Price and the categorical variables in the new created data set. (10p)
print("Summary of the variables in the new created data set:")
# 1. Identify Columns to Convert
columns_to_convert <- c("Company", "TypeName", "TouchScreen", "Ips", "Cpu_brand", "Gpu_brand", "Os", "HDD", "SSD", "Ram", "Ppi")
for (column_name in columns_to_convert) {
laptop_prices_filtered[, column_name] <- factor(laptop_prices_filtered[, column_name])
}
print(summary(laptop_prices_filtered))
# d) Cross classify the variables type of computer and the touch screen indicator in a table. Compute and interpret the conditional probability tables. (15p)
# Replace 1 with "Touch Screen" and 0 with "No Touch Screen"
laptop_prices_filtered$TouchScreen <- factor(laptop_prices_filtered$TouchScreen,
levels = c(0, 1),
labels = c("Not Touch Screen", "Touch Screen"))
# Cross-classification table
print("Probability table for TypeName and TouchScreen:")
print(table(laptop_prices_filtered$TypeName, laptop_prices_filtered$TouchScreen))
# Conditional probability tables
print(prop.table(table(laptop_prices_filtered$TypeName, laptop_prices_filtered$TouchScreen), 1))
print(prop.table(table(laptop_prices_filtered$TypeName, laptop_prices_filtered$TouchScreen), 2))
# e) Is there an association between the type of computer and the touch screen characteristic of a computer. Analyze it by using proper statistical method. (10p)
print("Chi-square test for TypeName and TouchScreen:")
print(chisq.test(table(laptop_prices_filtered$TypeName, laptop_prices_filtered$TouchScreen)))
# f) Check the distribution of Price first for all observations then for subgroups of type of laptop in the data set created in section (b).
#     Does it follow a normal distribution? (15p)
#Histogram for all observations
print("Shapiro-Wilk test for Price for all observations:")
hist(laptop_prices_filtered$Price, main = "Histogram of Price for all observations", xlab = "Price", ylab = "Frequency", col = "lightblue")
print(shapiro.test(laptop_prices_filtered$Price))
print("Shapiro-Wilk test for Price for subgroups of type of laptop:")
#Histogram for subgroups of type of laptop
hist(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Ultrabook"], main = "Histogram of Price for Ultrabooks", xlab = "Price", ylab = "Frequency", col = "lightblue")
print(shapiro.test(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Ultrabook"]))
hist(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Notebook"], main = "Histogram of Price for Notebooks", xlab = "Price", ylab = "Frequency", col = "lightblue")
print(shapiro.test(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Notebook"]))
hist(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "2 in 1 Convertible"], main = "Histogram of Price for 2 in 1 Convertibles", xlab = "Price", ylab = "Frequency", col = "lightblue")
print(shapiro.test(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "2 in 1 Convertible"]))
# g) Create a data frame just by including Ultrabooks and Notebooks. (5p)
laptop_prices_filtered_2 <- laptop_prices_filtered[laptop_prices_filtered$TypeName %in% c("Ultrabook", "Notebook"), ]
laptop_prices_filtered_2$TypeName <- factor(laptop_prices_filtered_2$TypeName,
levels = c("Ultrabook", "Notebook")) # Specify only desired levels
# Now create the boxplot
boxplot(Price ~ TypeName, data = laptop_prices_filtered_2)
# h) Make a boxplot to show the distribution of Price across two categories of Type: Ultrabook vs. Notebook. Interpret it. (10p)
boxplot(Price ~ TypeName, data = laptop_prices_filtered_2)
# i) Compare the average price of Ultrabooks and Notebooks by using the appropriate method. Do not forget to test the assumptions. (25p)
library(car)
print("Levene's test for Price between Ultrabooks and Notebooks:")
print(leveneTest(Price ~ TypeName, data = laptop_prices_filtered_2) )
print("T-test for Price between Ultrabooks and Notebooks:")
print(t.test(Price ~ TypeName, data = laptop_prices_filtered_2))
hist(laptop_prices_filtered$Price, main = "Histogram of Price for all observations", xlab = "Price", ylab = "Frequency", col = "lightblue")
#Histogram for subgroups of type of laptop
hist(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Ultrabook"], main = "Histogram of Price for Ultrabooks", xlab = "Price", ylab = "Frequency", col = "lightblue")
hist(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Notebook"], main = "Histogram of Price for Notebooks", xlab = "Price", ylab = "Frequency", col = "lightblue")
hist(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "2 in 1 Convertible"], main = "Histogram of Price for 2 in 1 Convertibles", xlab = "Price", ylab = "Frequency", col = "lightblue")
# h) Make a boxplot to show the distribution of Price across two categories of Type: Ultrabook vs. Notebook. Interpret it. (10p)
boxplot(Price ~ TypeName, data = laptop_prices_filtered_2)
# Download the laptop prices data set from the web site of kaggle
# (Laptop Price Prediction Cleaned Dataset) and read the data set in R.
# The data set consists of following variables: Company, Type Name, Ram, Weight, Price, # nolint: line_length_linter.
#    Touch Screen indicator, IPS indicator, Ppi, Cpu_brand, HDD, SSD, Gpu_brand, Os (Operation System). # nolint
# a) Import data set to R assigning the type of each variable correctly. (5p)
# b) Create a dataset including only types of laptops: Ultrabook, Notebook and 2 in 1 Convertible. (5p)
# c) Summarize the variables Weight, Price and the categorical variables in the new created data set. (10p)
# d) Cross classify the variables type of computer and the touch screen indicator in a table. Compute and interpret the conditional probability tables. (15p)
# e) Is there an association between the type of computer and the touch screen characteristic of a computer. Analyze it by using proper statistical method. (10p)
# f) Check the distribution of Price first for all observations then for subgroups of type of laptop in the data set created in section (b).
#     Does it follow a normal distribution? (15p)
# g) Create a data frame just by including Ultrabooks and Notebooks. (5p)
# h) Make a boxplot to show the distribution of Price across two categories of Type: Ultrabook vs. Notebook. Interpret it. (10p)
# i) Compare the average price of Ultrabooks and Notebooks by using the appropriate method. Do not forget to test the assumptions. (25p)
echo = TRUE
# a) Import data set to R assigning the type of each variable correctly. (5p)
laptop_prices <- read.csv("C:\\chomsky\\Academics\\Spring-2024\\SMDE\\Project\\Project1\\laptop_data_cleaned.csv", header = TRUE, sep = ",")
# b) Create a dataset including only types of laptops: Ultrabook, Notebook and 2 in 1 Convertible. (5p)
laptop_prices_filtered <- laptop_prices[laptop_prices$TypeName %in% c("Ultrabook", "Notebook", "2 in 1 Convertible"), ]
print(head(laptop_prices_filtered))
#print(head(laptop_prices_filtered))
# c) Summarize the variables Weight, Price and the categorical variables in the new created data set. (10p)
print("Summary of the variables in the new created data set:")
# 1. Identify Columns to Convert
columns_to_convert <- c("Company", "TypeName", "TouchScreen", "Ips", "Cpu_brand", "Gpu_brand", "Os", "HDD", "SSD", "Ram", "Ppi")
for (column_name in columns_to_convert) {
laptop_prices_filtered[, column_name] <- factor(laptop_prices_filtered[, column_name])
}
print(summary(laptop_prices_filtered))
# d) Cross classify the variables type of computer and the touch screen indicator in a table. Compute and interpret the conditional probability tables. (15p)
# Replace 1 with "Touch Screen" and 0 with "No Touch Screen"
laptop_prices_filtered$TouchScreen <- factor(laptop_prices_filtered$TouchScreen,
levels = c(0, 1),
labels = c("Not Touch Screen", "Touch Screen"))
# Cross-classification table
print("Probability table for TypeName and TouchScreen:")
print(table(laptop_prices_filtered$TypeName, laptop_prices_filtered$TouchScreen))
# Conditional probability tables
print(prop.table(table(laptop_prices_filtered$TypeName, laptop_prices_filtered$TouchScreen), 1))
print(prop.table(table(laptop_prices_filtered$TypeName, laptop_prices_filtered$TouchScreen), 2))
# e) Is there an association between the type of computer and the touch screen characteristic of a computer. Analyze it by using proper statistical method. (10p)
print("Chi-square test for TypeName and TouchScreen:")
print(chisq.test(table(laptop_prices_filtered$TypeName, laptop_prices_filtered$TouchScreen)))
# f) Check the distribution of Price first for all observations then for subgroups of type of laptop in the data set created in section (b).
#     Does it follow a normal distribution? (15p)
#Histogram for all observations
print("Shapiro-Wilk test for Price for all observations:")
hist(laptop_prices_filtered$Price, main = "Histogram of Price for all observations", xlab = "Price", ylab = "Frequency", col = "lightblue")
print(shapiro.test(laptop_prices_filtered$Price))
print("Shapiro-Wilk test for Price for subgroups of type of laptop:")
#Histogram for subgroups of type of laptop
hist(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Ultrabook"], main = "Histogram of Price for Ultrabooks", xlab = "Price", ylab = "Frequency", col = "lightblue")
print(shapiro.test(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Ultrabook"]))
hist(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Notebook"], main = "Histogram of Price for Notebooks", xlab = "Price", ylab = "Frequency", col = "lightblue")
print(shapiro.test(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "Notebook"]))
hist(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "2 in 1 Convertible"], main = "Histogram of Price for 2 in 1 Convertibles", xlab = "Price", ylab = "Frequency", col = "lightblue")
print(shapiro.test(laptop_prices_filtered$Price[laptop_prices_filtered$TypeName == "2 in 1 Convertible"]))
# g) Create a data frame just by including Ultrabooks and Notebooks. (5p)
laptop_prices_filtered_2 <- laptop_prices_filtered[laptop_prices_filtered$TypeName %in% c("Ultrabook", "Notebook"), ]
laptop_prices_filtered_2$TypeName <- factor(laptop_prices_filtered_2$TypeName,
levels = c("Ultrabook", "Notebook")) # Specify only desired levels
# Now create the boxplot
boxplot(Price ~ TypeName, data = laptop_prices_filtered_2)
# h) Make a boxplot to show the distribution of Price across two categories of Type: Ultrabook vs. Notebook. Interpret it. (10p)
boxplot(Price ~ TypeName, data = laptop_prices_filtered_2)
# i) Compare the average price of Ultrabooks and Notebooks by using the appropriate method. Do not forget to test the assumptions. (25p)
library(car)
print("Levene's test for Price between Ultrabooks and Notebooks:")
print(leveneTest(Price ~ TypeName, data = laptop_prices_filtered_2) )
print("T-test for Price between Ultrabooks and Notebooks:")
print(t.test(Price ~ TypeName, data = laptop_prices_filtered_2))
plot(model_ram)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
library(tidyverse)
library(car) # For assumption testing
laptop_data <- read.csv("laptop_data_cleaned.csv", header = TRUE, sep = ",")
# You had already assigned the type of the variables. Now fit a linear regression model to predict price of laptops.
# a)Consider  the  numerical  variables  in  the  data  set  and find  the  best  simple  linear  regression model to predict
# the prices (Test  the assumptions and use  transformations if it is required.)
corMat <- laptop_data %>%
select(Price, where(is.numeric)) %>%
cor(use = "pairwise.complete.obs")
# Get the correlation of the Price variable with the other numerical variables
print(corMat["Price", ]) # Theres is a cprrelation between Price and Ram,
# Using Ram as it has the highest correlation with Price, had to remove outlier of 64GB
model_ram <- lm(Price ~ Ram, data = laptop_data)
(summary(model_ram))
bptest(model_ram) # test for Homoscedasticity
print(shapiro.test(model_ram$residuals) )# Shapiro-Wilk Test, test for normality of residuALS
hist(model_ram$residuals)
# test for linearity of the relationship between the dependent and independent variables using a scatter plot
plot(laptop_data$Ram, laptop_data$Price, main = "Price vs Log(Ram)", xlab = "Log(Ram)", ylab = "Price", pch = 19, col = "blue")
# test for linearity of the relationship between the dependent and independent variables using a scatter plot
plot(laptop_data$Ram, laptop_data$Price, main = "Price vs Ram", xlab = "Ram", ylab = "Price", pch = 19, col = "blue")
# test for linearity of the relationship between the dependent and independent variables using a scatter plot
plot(laptop_data$Ram, laptop_data$Price, main = "Price vs Ram", xlab = "Ram", ylab = "Price", pch = 19, col = "blue")
# add regression line to the scatter plot
abline(model_ram, col = "red")
plot(model_ram)
# b) Fit a multivariate linear regression model with two (numerical) independent variables. Choose the most significant regression
# model with two predictors. (Transform the variables if it is needed and test all the assumptions.)
# Then compare this model to the simple linear regression model that you fit in (a). Which one is a better model? Why? (25p)
# Assuming 'laptop_data' has your data and 'Price' is the dependent variable
# A list of potential predictors
potential_predictors <- c("Ram", "SSD", "Ppi")
# Remove the dependent variable ('Price') from the list
potential_predictors <- potential_predictors[!potential_predictors == "Price"]
# Function to build a model, check assumptions, and store results (modify as needed)
build_and_assess_model <- function(formula, data) {
model <- lm(formula, data = data)
# Add assumption checks here using 'plot(model)'...
results <- summary(model)$adj.r.squared
return(results)
}
# Empty container to store model results
model_results <- matrix(nrow = choose(length(potential_predictors), 2),
ncol = 4,
dimnames = list(NULL, c("Combination", "Adj. R-squared", "AIC", "BIC")))
# Loop through combinations of two predictors
counter <- 1
for (i in 1:(length(potential_predictors) - 1)) {
for (j in (i + 1):length(potential_predictors)) {
formula <- as.formula(paste("Price ~", potential_predictors[i], "+", potential_predictors[j]))
model_results[counter,] <- c(paste(potential_predictors[i], "+", potential_predictors[j]), build_and_assess_model(formula, data = laptop_data))
counter <- counter + 1
}
}
# Print the results
print(model_results)
# Select the two most significant predictors
best_model <- lm(Price ~ Ram + SSD, data = laptop_data)
plot(best_model)
library(ggplot2)
library(dplyr)
rm(list = ls())
library(MASS)
library(lmtest)
library(car) # For assumption testing
# Load the dataset
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
data1 <- read.csv("laptop_data_cleaned.csv")
data <- subset(data1, !Ram %in% 64) #delete the outlier from the dataset
# Convert categorical variables to factors
data$Company <- as.factor(data$Company)
data$TypeName <- as.factor(data$TypeName)
data$TouchScreen <- as.factor(data$TouchScreen)
data$Cpu_brand <- as.factor(data$Cpu_brand)
data$Gpu_brand <- as.factor(data$Gpu_brand)
data$Os <- as.factor(data$Os)
# Fit the initial model with Ram and SSD
base_model <- lm(Price ~ Ram + SSD, data = data)
# List of categorical variables
categorical_factors <- c("Company", "TypeName", "TouchScreen", "Cpu_brand", "Gpu_brand", "Os")
#iterate through every factor and add it to the base model
for (factor in categorical_factors) {
formula <- paste("Price ~ Ram + SSD +", factor)
model <- lm(formula, data = data) #our new model
# Print summary of each model so we can evaluate them
cat("\nSummary for model with factor:", factor, "\n")
print(summary(model))
}
# Fit the final model
final_model <- lm(Price ~ Ram + SSD + Cpu_brand, data = data)
par(mfrow = c(2, 2), mar = c(2, 2, 1, 1))
# Residuals vs Fitted plot for linearity
plot(final_model, which = 1)
# Normal Q-Q plot for normality and histogram
plot(final_model, which = 2)
hist(final_model$residuals)
#bp test to check homoscedasticity
bptest(final_model)
#to check independance
dwtest(final_model)
## now we try to transform the variables so we achieve homoscedasticity ##
##First we tries boxcox transformation
library(MASS)
boxcox_model <- boxcox(lm(Price ~ Ram + SSD, data = data))
lambda <- boxcox_model$x[which.max(boxcox_model$y)]
data$boxcox_Price <- (data$Price^lambda - 1) / lambda
data$boxcox_Ram <- (data$Ram^lambda - 1) / lambda
data$boxcox_SSD <- (data$SSD^lambda - 1) / lambda
model <- lm(boxcox_Price ~ boxcox_Ram + boxcox_SSD + Cpu_brand, data = data)
summary(model)
bptest(model)
hist(model$residuals)
plot(model, which = 2)
#Then Log transformation on Price
data$Log_Price <- log(data$Price)
modellog <- lm(Log_Price ~ Ram + SSD + Cpu_brand, data = data)
summary(modellog)
bptest(modellog)
hist(modellog$residuals)
#Then cubic root transformation
data$Ram_cubic_root <- data$Ram^(1/3)
data$SSD_cubic_root <- data$SSD^(1/3)
cubic_root_model <- lm(Price ~ Ram_cubic_root + SSD_cubic_root + Cpu_brand, data = data)
bptest(cubic_root_model)
#Then 4th root transformation
data$Ram_4_root <- data$Ram^(1/4)
data$SSD_4_root <- data$SSD^(1/4)
four_model <- lm(Price ~ Ram_4_root + SSD_4_root + Cpu_brand, data = data)
bptest(four_model)
#Finally, least squares
weights <- 1 / fitted(final_model)^2
wls_model <- lm(Price ~ Ram + SSD + Cpu_brand, data = data, weights = weights)
summary(wls_model)
bptest(wls_model)
hist(wls_model$residuals)
dwtest(wls_model)
#Comparing the base_model to the wls_model aka best_model
# Compare the R-squared values
r_squared_base <- summary(base_model)$r.squared
vif(wls_model)
vif(final_model)
#Comparing the base_model to the wls_model aka best_model
# Compare the R-squared values
r_squared_base <- summary(base_model)$r.squared
r_squared_wls <- summary(wls_model)$r.squared
# Compare the adjusted R-squared values
adj_r_squared_base <- summary(base_model)$adj.r.squared
adj_r_squared_wls <- summary(wls_model)$adj.r.squared
# Compare AIC
aic_base <- AIC(base_model)
aic_wls <- AIC(wls_model)
r_squared_wls <- summary(wls_model)$r.squared
# Compare the adjusted R-squared values
adj_r_squared_base <- summary(base_model)$adj.r.squared
adj_r_squared_wls <- summary(wls_model)$adj.r.squared
# Compare AIC
aic_base <- AIC(base_model)
aic_wls <- AIC(wls_model)
# Compare BIC
bic_base <- BIC(base_model)
bic_wls <- BIC(wls_model)
# Compare p-values of coefficients (optional)
p_values_base <- summary(base_model)$coefficients[, 4]
p_values_wls <- summary(wls_model)$coefficients[, 4]
# Print the comparison
cat("Base model:\n")
cat("R-squared:", r_squared_base, "\n")
cat("Adjusted R-squared:", adj_r_squared_base, "\n")
cat("AIC:", aic_base, "\n")
cat("BIC:", bic_base, "\n")
cat("\n")
cat("WLS model:\n")
cat("R-squared:", r_squared_wls, "\n")
cat("Adjusted R-squared:", adj_r_squared_wls, "\n")
cat("AIC:", aic_wls, "\n")
cat("BIC:", bic_wls, "\n")
#Now we will check the validity using VIF values
library(car)
vif_values <- vif(wls_model)
# Residuals vs Fitted plot for linearity
plot(final_model, which = 1)
# Normal Q-Q plot for normality and histogram
plot(final_model, which = 2)
hist(final_model$residuals)
#bp test to check homoscedasticity
bptest(final_model)
